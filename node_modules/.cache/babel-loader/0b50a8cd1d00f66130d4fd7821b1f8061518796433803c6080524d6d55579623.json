{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohamed\\\\Desktop\\\\chatbot-notMain\\\\chatbot-notMain\\\\src\\\\components\\\\ChatForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatForm = ({\n  chatHistory,\n  setChatHistory,\n  generateBotResponse\n}) => {\n  _s();\n  const inputRef = useRef();\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const userMessage = inputRef.current.value.trim();\n    if (!userMessage) return;\n    inputRef.current.value = \"\";\n\n    // Add user message\n    setChatHistory(prevHistory => {\n      const updatedHistory = [...prevHistory, {\n        role: \"user\",\n        text: userMessage\n      }];\n\n      // Only update UI with \"Thinking...\" if it's NOT already present\n      if (!updatedHistory.some(msg => msg.text === \"Thinking...\")) {\n        updatedHistory.push({\n          role: \"model\",\n          text: \"Thinking...\"\n        });\n      }\n      setTimeout(() => generateBotResponse(updatedHistory), 600);\n      return updatedHistory;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"chat-form\",\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: \"text\",\n      placeholder: \"Message...\",\n      className: \"message-input\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"send-btn\",\n      children: \"\\uD83D\\uDE80\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatForm, \"iD9XNNsNOlNDckBemnvlLS+aHYk=\");\n_c = ChatForm;\nexport default ChatForm;\nvar _c;\n$RefreshReg$(_c, \"ChatForm\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","ChatForm","chatHistory","setChatHistory","generateBotResponse","_s","inputRef","handleFormSubmit","e","preventDefault","userMessage","current","value","trim","prevHistory","updatedHistory","role","text","some","msg","push","setTimeout","className","onSubmit","children","ref","type","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Mohamed/Desktop/chatbot-notMain/chatbot-notMain/src/components/ChatForm.js"],"sourcesContent":["import React, { useRef } from 'react';\r\n\r\nconst ChatForm = ({ chatHistory, setChatHistory, generateBotResponse }) => {\r\n    const inputRef = useRef();\r\n\r\n    const handleFormSubmit = (e) => {\r\n      e.preventDefault();\r\n      const userMessage = inputRef.current.value.trim();\r\n      if (!userMessage) return;\r\n  \r\n      inputRef.current.value = \"\";\r\n  \r\n      // Add user message\r\n      setChatHistory((prevHistory) => {\r\n          const updatedHistory = [...prevHistory, { role: \"user\", text: userMessage }];\r\n          \r\n          // Only update UI with \"Thinking...\" if it's NOT already present\r\n          if (!updatedHistory.some(msg => msg.text === \"Thinking...\")) {\r\n              updatedHistory.push({ role: \"model\", text: \"Thinking...\" });\r\n          }\r\n  \r\n          setTimeout(() => generateBotResponse(updatedHistory), 600);\r\n          return updatedHistory;\r\n      });\r\n  };\r\n  \r\n\r\n    return (\r\n        <form className=\"chat-form\" onSubmit={handleFormSubmit}>\r\n            <input ref={inputRef} type=\"text\" placeholder=\"Message...\" className=\"message-input\" required />\r\n            <button type=\"submit\" className=\"send-btn\">\r\n                ðŸš€\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ChatForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,cAAc;EAAEC;AAAoB,CAAC,KAAK;EAAAC,EAAA;EACvE,MAAMC,QAAQ,GAAGR,MAAM,CAAC,CAAC;EAEzB,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,WAAW,GAAGJ,QAAQ,CAACK,OAAO,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;IACjD,IAAI,CAACH,WAAW,EAAE;IAElBJ,QAAQ,CAACK,OAAO,CAACC,KAAK,GAAG,EAAE;;IAE3B;IACAT,cAAc,CAAEW,WAAW,IAAK;MAC5B,MAAMC,cAAc,GAAG,CAAC,GAAGD,WAAW,EAAE;QAAEE,IAAI,EAAE,MAAM;QAAEC,IAAI,EAAEP;MAAY,CAAC,CAAC;;MAE5E;MACA,IAAI,CAACK,cAAc,CAACG,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACF,IAAI,KAAK,aAAa,CAAC,EAAE;QACzDF,cAAc,CAACK,IAAI,CAAC;UAAEJ,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAE;QAAc,CAAC,CAAC;MAC/D;MAEAI,UAAU,CAAC,MAAMjB,mBAAmB,CAACW,cAAc,CAAC,EAAE,GAAG,CAAC;MAC1D,OAAOA,cAAc;IACzB,CAAC,CAAC;EACN,CAAC;EAGC,oBACIf,OAAA;IAAMsB,SAAS,EAAC,WAAW;IAACC,QAAQ,EAAEhB,gBAAiB;IAAAiB,QAAA,gBACnDxB,OAAA;MAAOyB,GAAG,EAAEnB,QAAS;MAACoB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,YAAY;MAACL,SAAS,EAAC,eAAe;MAACM,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChGhC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAACJ,SAAS,EAAC,UAAU;MAAAE,QAAA,EAAC;IAE3C;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAAC3B,EAAA,CAjCIJ,QAAQ;AAAAgC,EAAA,GAARhC,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}